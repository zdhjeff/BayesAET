% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/BAE_t.R
\name{BAET.sim}
\alias{BAET.sim}
\title{BAET simulator: this function simulates a Bayesian adaptive enrichment trial}
\usage{
BAET.sim(
  nt,
  ns,
  ss.interim.es,
  response.type = "gaussian",
  sig.e = 10,
  mean.response = matrix(c(seq(nt * ns)), nrow = nt, ncol = ns, byrow = F),
  prob.subpopulation = rep(1/ns, ns),
  prob.trtarm = rep(1/nt, nt),
  maxN = 300,
  upper = rep(0.9, ns),
  lower = rep(0.1, ns),
  rar = F,
  rarmin.p = 0.1,
  rarmax.p = 0.9,
  MOR = rep(-Inf, ns),
  prob.MOR = rep(0.1, ns),
  N.MCMC = 3000,
  prior.cov = diag(100, ns * nt),
  prior.mean = rep(0, ns * nt)
)
}
\arguments{
\item{nt}{The number of treatment arms.}

\item{ns}{The number of subpopulations.}

\item{ss.interim.es}{A list containing g vectors, with g-th vector indicating the accumulated sample sizes at each interim analysis for g-th subpopulation.}

\item{response.type}{The outcome type, one of “gaussian”, “binary” or “count”.}

\item{sig.e}{The standard deviation of the error term when generating a gaussian outcome. The default value is 1. This parameter is only relevant when the “response.type” is set as “gaussian”.}

\item{mean.response}{A ‘nt’ * ‘ns’  matrix of the assumed true mean responses for each treatment (row number) in each subpopulation (column number). For binary and count outcomes, the inputs are the probabilities and rates, respectively.}

\item{prob.subpopulation}{A vector of length ‘ns’ indicating the probabilities of a participant belonging to each of the subpopulations. The default is an equal probability for each subpopulation.}

\item{prob.trtarm}{A vector of length ‘nt’ indicating the (initial) probability of a participant being assigned to each treatment arm. The default is an equal probability to each treatment arm.}

\item{maxN}{The maximum sample size.}

\item{upper}{A vector of length ‘ns’ indicating the posterior probability threshold above which a treatment will be declared best (superiority) for each subpopulation. The default value is 0.90.}

\item{lower}{A vector of length ‘ns’ indicating the posterior probability threshold below which a treatment will be dropped for each subpopulation. The default value is 0.10.}

\item{rar}{A logical indicator of whether using responsive adaptive randomization (RAR). The default setting is ‘false’, i.e., balanced randomization.}

\item{rarmin.p}{The minimum randomization probability under ‘rar’. The default value is 0.1.}

\item{rarmax.p}{The maximum randomization probability under ‘rar’. The default value is 0.9.}

\item{MOR}{A vector of length ‘ns’ indicating the minimum outcome requirement threshold for each subpopulation. The default value is ‘-Inf’.}

\item{prob.MOR}{A vector of length ‘ns’ indicating the posterior probability threshold below which a treatment will be dropped due to the outcome not achieving the ‘MOR’ for each subpopulation. The default value is 0.10.}

\item{N.MCMC}{The number of MCMC samples (excluding burn in samples)}

\item{prior.cov}{A (‘nt’ * ‘ns’) by (‘nt’ * ‘ns’) square matrix for the prior covariance of a multivariate normal prior for the mean responses. The default is a diagonal matrix with ‘100’ on the diagonal.}

\item{prior.mean}{A vector of length ‘nt’ * ‘ns’ for prior mean of a multivariate normal prior for the mean responses. The default is a vector of zeros.}

\item{shape}{The shape parameter for the gamma distribution for the standard deviation of the error term, i.e., “sig.e”. The default value is 0.001. This parameter is only relevant when the “response.type” is set as “gaussian”.}

\item{rate}{The rate parameter for the gamma distribution for the standard deviation of the error term, i.e., “sig.e”. The default value is 0.001. This parameter is only relevant when the “response.type” is set as “gaussian”.}
}
\value{
n.analysis: The total number of analyses, i.e., the number of interim analysis plus the final analysis.

interim.sub: A vector indicating the sequence of subpopulations that reach the specified sample size threshold and trigger interim analyses.

n_terminate: The total sample size consumed when the trial ended.

trt_sub: A two-column matrix with the first column displaying the treatment each participant received and the second column displaying the subpopulation in which the participant belongs.

ss.sub: A vector of length ‘ns’ indicating the sample size consumed in each subpopulation.

ss.sub.trt: A ‘ns’ * ‘nt’ matrix storing the sample size for each subpopulation in each treatment arm, with the row number indicating the subpopulation and the column number indicating the treatment arm.

est: A list of length ‘ns’ with each component summarizing the posterior distribution for the mean responses within a subpopulation at trial termination. Each component is a ‘nt’ * 4 data frame with rows representing treatments and columns displaying the posterior mean, the lower and upper bound of 95% Credible Interval, and the SD of the posterior distribution, respectively.

powerind: A vector of length ‘ns’ indicating whether the best treatment arm was correctly selected in each subpopulation at trial termination. The value is ‘1’ if correctly selected and ‘0’ otherwise.

y: A vector for the simulated outcomes.

prob_sup_minioutcome: A list of length ‘ns’ with each component summarizing the probability of superiority over the fixed MOR within a subpopulation. Each component is a matrix with rows representing treatments and columns displaying the probability of superiority over the fixed MOR at each interim look.

prob_superiority: A list of length ‘ns’ with each component summarizing the probability of superiority among different treatments within a subpopulation. Each component is a matrix with rows indicating treatments and columns displaying the probability of superiority for each treatment at each interim look.
}
\description{
BAET simulator: this function simulates a Bayesian adaptive enrichment trial
}
\examples{
nt =3
ns =2
BAET.sim (nt=3, ns=2,
         ss.interim.es = list(c(30, 50, 100), c(20, 60, 100)),
         response.type = "gaussian",
         sig.e = 10,
         mean.response = matrix(c(seq(nt*ns)), nrow = nt, ncol = ns, byrow =F),
         prob.subpopulation = rep (1/ns, ns),
         prob.trtarm = rep (1/nt, nt),
        maxN = 300,
         upper = rep (0.90, ns),
         lower = rep (0.10, ns),
        rar = F,
         rarmin.p = 0.1,
         rarmax.p = 0.9,
         MOR = rep(-Inf, ns),
         prob.MOR = rep(0.10, ns),
         N.MCMC = 3000,
         prior.cov = diag(100, ns*nt),
         prior.mean = rep(0, ns*nt) #notice for binary/count outcome,the prior
         #is on log-odds/log-rate, ie, prior is put on the coef of the model
)
}
